configs:
  mesh:
    meshConfig: |-
      disablePolicyChecks: true
      ingressControllerMode: "OFF"
      authPolicy: NONE
      rdsRefreshDelay: 10s
      mixerReportServer: ${TELEMETRY_ADDRESS}:9091
      outboundTrafficPolicy:
        mode: ALLOW_ANY
      defaultConfig:
        discoveryRefreshDelay: 10s
        connectTimeout: 30s
        configPath: "/etc/istio/proxy"
        binaryPath: "/usr/local/bin/envoy"
        serviceCluster: istio-proxy
        drainDuration: 45s
        parentShutdownDuration: 1m0s
        interceptionMode: REDIRECT
        proxyAdminPort: 15000
        controlPlaneAuthPolicy: NONE
        discoveryAddress: istio-pilot.${NAMESPACE}:15010

services:
  istio-pilot:
    labels:
      istio: pilot
    global_permissions:
    - '* config.istio.io/*'
    - '* networking.istio.io/*'
    - '* authentication.istio.io/*'
    - '* apiextensions.k8s.io/customresourcedefinitions'
    - '* extensions/ingresses'
    - '* extensions/ingresses/status'
    - rbac.istio.io/*
    - create,get,list,watch,update configmaps
    - endpoints
    - pods
    - services
    - namespaces
    - nodes
    - secrets
    containers:
    - name: discovery
      args:
      - discovery
      - --monitoringAddr=:15014
      - --domain
      - cluster.local
      - --secureGrpcAddr
      - ""
      - --keepaliveMaxServerConnectionAge
      - 30m
      configs:
      - mesh/meshConfig:/etc/istio/config/mesh
      ports:
      - 8080/http,http-discovery
      - 15010/grpc,grpc-xds
      - 15014/http,http-monitoring
      env:
      - POD_NAME=$(self/name)
      - POD_NAMESPACE=$(self/namespace)
      - PILOT_THROTTLE=500
      - PILOT_CACHE_SQUASH=5
      - PILOT_DISABLE_XDS_MARSHALING_TO_ANY=1
      - PILOT_TRACE_SAMPLING=100
      image: "istio/pilot:${TAG}"
      imagePullPolicy: always
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
  gateway:
    labels:
      "gateway": "external"
      "istio": "gateway"
    global_permissions:
    - "get,watch,list,update extensions/thirdpartyresources"
    - "get,watch,list,update */virtualservices"
    - "get,watch,list,update */destinationrules"
    - "get,watch,list,update */gateways"
    - secrets
    {{- if eq "${INSTALL_MODE}" "hostport" }}
    global: true
    {{- end}}
    ports:
    {{- if eq "${INSTALL_MODE}" "hostport" }}
    - ${HTTP_PORT}/http,http2,hostport=true
    - ${HTTPS_PORT}/http,https,hostport=true
    {{- else}}
    - ${HTTP_PORT}/http,http2,internal=true
    - ${HTTPS_PORT}/http,https,internal=true
    {{- end}}
    image: "istio/proxyv2:${TAG}"
    imagePullPolicy: Always
    args:
    - proxy
    - router
    - --domain
    - $(POD_NAMESPACE).svc.cluster.local
    - --log_output_level
    - info
    - --drainDuration
    - '45s' #drainDuration
    - --parentShutdownDuration
    - '1m0s' #parentShutdownDuration
    - --connectTimeout
    - '10s' #connectTimeout
    - --serviceCluster
    - gateway
    - --zipkinAddress
    - ""
    - --statsdUdpAddress
    - ""
    - --proxyAdminPort
    - "15000"
    - --statusPort
    - "15020"
    - --controlPlaneAuthPolicy
    - NONE
    - --discoveryAddress
    - istio-pilot:15010
    env:
    - POD_NAME=$(self/name)
    - POD_NAMESPACE=$(self/namespace)
    - INSTANCE_IP=$(self/ip)
    - HOST_IP=$(self/hostIp)
    - ISTIO_META_POD_NAME=$(self/name)
    - ISTIO_META_CONFIG_NAMESPACE=$(self/namespace)
    - ISTIO_META_USER_SDS=true
    volumes:
    - ingressgatewaysdsudspath:/var/run/ingress_gateway
    readinessProbe:
      failureThreshold: 30
      httpGet:
        path: /healthz/ready
        port: 15020
        scheme: HTTP
      initialDelaySeconds: 1
      periodSeconds: 2
      successThreshold: 1
      timeoutSeconds: 1
    containers:
    - name: ingress-sds
      image: "istio/node-agent-k8s:${TAG}"
      env:
      - ENABLE_WORKLOAD_SDS=false
      - ENABLE_INGRESS_GATEWAY_SDS=true
      - INGRESS_GATEWAY_NAMESPACE=$(self/namespace)
      volumes:
      - ingressgatewaysdsudspath:/var/run/ingress_gateway
