configs:
  buildkitd-config:
    buildkitd.toml: |
      {{- if eq "${RUNTIME}" "containerd" }}
      root = "/buildkit-data"
      [grpc]
        address = [ "tcp://0.0.0.0:80" ]
        # debugAddress is address for attaching go profiles and debuggers.
        debugAddress = "0.0.0.0:6060"

      [worker.oci]
        enabled = false

      [worker.containerd]
        address = "/run/k3s/containerd/containerd.sock"
        enabled = true
        platforms = [ "linux/amd64" ]
        namespace = "k8s.io"
      {{- else}}
      [grpc]
        address = [ "tcp://0.0.0.0:80" ]
        # debugAddress is address for attaching go profiles and debuggers.
        debugAddress = "0.0.0.0:6060"
      {{- end}}

services:
  buildkitd-dev:
    disableServiceMesh: true
    labels:
      app: buildkitd-dev
    systemSpec:
      podSpec:
        containers:
        - image: "moby/buildkit:v0.6.0"
          imagePullPolicy: IfNotPresent
          name: buildkitd
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            privileged: true
            procMount: Default
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/buildkit/buildkitd.toml
            name: config
            subPath: buildkitd.toml
          {{- if eq "${RUNTIME}" "containerd" }}
          - mountPath: /var/lib/rancher/k3s
            name: containerd
          - mountPath: /run
            name: run
          - mountPath: /buildkit-data
            name: data
          {{- end}}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: buildkitd-config
          name: config
        {{- if eq "${RUNTIME}" "containerd" }}
        - hostPath:
            path: /var/lib/rancher/k3s
            type: Directory
          name: containerd
        - hostPath:
            path: /run
            type: Directory
          name: run
        - hostPath:
            path: /buildkit-data
            type: DirectoryOrCreate
          name: data
        {{- end}}
  {{- if ne "${RUNTIME}" "multiple-nodes" }}
  socat-socket:
    disableServiceMesh: true
    labels:
      app: socat-socket
    systemSpec:
      podSpec:
        containers:
        - args:
          - TCP-LISTEN:80,fork
          - UNIX-CONNECT:${SOCKET_ADDRESS}
          image: alpine/socat:1.0.3
          imagePullPolicy: IfNotPresent
          name: socat
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: ${SOCKET_ADDRESS}
            name: sock
          ports:
          - containerPort: 80
            protocol: TCP
        volumes:
        - hostPath:
            path: ${SOCKET_ADDRESS}
            type: File
          name: sock
  {{- end}}

templates:
  questions:
    - variable: RUNTIME
    - variable: SOCKET_ADDRESS
